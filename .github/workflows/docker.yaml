name: Publish docker image

on:
  workflow_dispatch:
  push:
    branches: ["main", "feat/ais-package"]
    paths:
      - ".github/workflows/docker.yaml"
      - "compose/templates/ais/ais-catcher"

permissions:
  packages: write

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PACKAGE_NAME: ais-catcher-wsh
  PACKAGE_DESCRIPTION: "AIS catcher for WSH"
  PACKAGE_VENDOR: WSH
  WORKING_DIRECTORY: compose/templates/ais/ais-catcher

jobs:
  publish-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build and push docker image
        uses: ./.github/actions/docker
        with:
          package_name: ${{ env.PACKAGE_NAME }}
          package_description: ${{ env.PACKAGE_DESCRIPTION }}
          package_vendor: ${{ env.PACKAGE_VENDOR }}
          working_directory: ${{ env.WORKING_DIRECTORY }}
          push_condition: true
          # push_condition: ${{ github.event_name != 'pull_request' }}

      # - name: Calculate Container Metadata
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ghcr.io/${{ github.repository }}/${{ env.PACKAGE_NAME }}
      #     tags: |
      #       type=edge,branch=main
      #       type=ref,event=tag
      #       type=ref,event=branch
      #     labels: |
      #       org.opencontainers.image.title=${{ env.PACKAGE_NAME }}
      #       org.opencontainers.image.description=${{ env.PACKAGE_DESCRIPTION }}
      #       org.opencontainers.image.vendor=${{ env.PACKAGE_VENDOR }}

      # - name: Setup QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Setup Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and Push Images
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ${{ env.WORKING_DIRECTORY }}
      #     platforms: linux/amd64, linux/arm64
      #     push: true
      #     #push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
