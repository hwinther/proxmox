# Configuration file for muacme.
# vim: set ft=sh: ts=4:

# ACMEv2 server directory object URL. If not specified uacme uses
# https://acme-v02.api.letsencrypt.org/directory for production or
# https://acme-staging-v02.api.letsencrypt.org/directory if $staging is yes.
#acme_url=

# dns-01 challenge script
challenge_hook="/usr/share/muacme/nsupdate-challenge-hook.sh"

# Key bit length (defaults to 3072). Only applies to newly generated keys.
# RSA key length must be a multiple of 8 between 2048 and 8192.
# EC key length must be either 256 (NID_X9_62_prime256v1 curve) or
# 384 (NID_secp384r1 curve).
# key_bits=256
key_bits=4096

# Key type, either "RSA" (default) or "EC". Only applies to newly generated
# keys. The bit length can be specified with $key_bits.
# key_type="EC"
key_type="RSA"

# Path of the renew hook program that is executed after at least one
# certificate has been successfully renewed. It will get domain names of the
# renewed certificate (only CN, not alternative names) as arguments.
# Set empty string to disable.
renew_hook="/etc/muacme/renew-hook.sh"

## Options for nsupdate-challenge-hook.sh

# TSIG key to authenticate dynamic update requests; either absolute path to
# a file with the TSIG key, or the TSIG key itself. TSIG key must be in format
# [<alg>:]<name>:<key>. This option is required.
dns01_ddns_key=CONFIG_DDNS_KEY

# Hostname or IP address of the receiving server for dynamic DNS updates.
# If not provided, the master nameserver for the given record will be used.
dns01_ddns_server=CONFIG_DDNS_SERVER

# Maximum number of seconds to wait for the record to be propagated into the
# master nameserver.
#dns01_wait_max=10

# (k)dig command.
#dns01_dig="kdig +timeout=5 +retry=3"

# (k)nsupdate command.
# Options: -t timeout, -r retries, -v use TCP connection
#dns01_nsupdate="knsupdate -t 5 -r 3 -v"

# NOTE: Each of the above dns01_* options can be overriden using environment
# variable with the same name, but capitalized (e.g. DNS01_DDNS_KEY).
